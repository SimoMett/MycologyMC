plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
}

repositories {
    mavenLocal()
    maven {
        url "https://maven2.bai.lol"
        content {
            includeGroup "lol.bai"
            includeGroup "mcp.mobius.waila"
        }
    }
    maven { url "https://maven.shedaniel.me/" }
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            data()
            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

dependencies {
    // WTHIT integration
    compileOnly "mcp.mobius.waila:wthit-api:neo-13.1.1"
    runtimeOnly "mcp.mobius.waila:wthit:neo-13.1.1"
    runtimeOnly "lol.bai:badpackets:neo-0.8.1"

    // Example mod dependency with JEI
    // The JEI API is declared for compile time use, while the full JEI artifact is used at runtime
    // compileOnly "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
    // compileOnly "mezz.jei:jei-${minecraft_version}-forge-api:${jei_version}"
    // runtimeOnly "mezz.jei:jei-${minecraft_version}-forge:${jei_version}"

    // Example mod dependency using a mod jar from ./libs with a flat dir repository
    // This maps to ./libs/coolmod-${mc_version}-${coolmod_version}.jar
    // The group id is ignored when searching -- in this case, it is "blank"
    // implementation "blank:coolmod-${mc_version}:${coolmod_version}"

    // Example mod dependency using a file as dependency
    //runtimeOnly files("libs/expanded_ecosphere-neoforge-3.4.3.jar")
    //runtimeOnly files("libs/cristellib-neoforge-1.2.9.jar")

    // Example project dependency using a sister or child project:
    // implementation project(":myproject")

    // For more info:
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    // REI
    runtimeOnly "me.shedaniel:RoughlyEnoughItems-neoforge:17.0.794"
    compileOnly "me.shedaniel:RoughlyEnoughItems-api-neoforge:17.0.794"
    compileOnly "me.shedaniel:RoughlyEnoughItems-default-plugin-neoforge:17.0.794"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
